# 1
# Model Technology ModelSim SE vlog 6.6d Compiler 2010.11 Nov  1 2010
# -- Compiling package instr_register_pkg
# -- Compiling module instr_register
# -- Importing package instr_register_pkg
# -- Compiling package instr_register_test_sv_unit
# -- Importing package instr_register_pkg
# -- Compiling module instr_register_test
# -- Compiling module top
# -- Compiling interface tb_ifc
# -- Compiling package tb_ifc_sv_unit
# -- Importing package instr_register_pkg
# -- Compiling interface tb_ifc
# 
# Top level modules:
# 	top
# vsim +notimingchecks +nowarnTSCALE -sva -nocoverage -quiet -sv_seed 777886 -novopt top 
# Refreshing C:\Users\panai\Desktop\lab2-TSC\sim\work.instr_register_pkg
# Refreshing C:\Users\panai\Desktop\lab2-TSC\sim\work.top
# Refreshing C:\Users\panai\Desktop\lab2-TSC\sim\work.tb_ifc_sv_unit
# Refreshing C:\Users\panai\Desktop\lab2-TSC\sim\work.tb_ifc
# Refreshing C:\Users\panai\Desktop\lab2-TSC\sim\work.instr_register_test_sv_unit
# Refreshing C:\Users\panai\Desktop\lab2-TSC\sim\work.instr_register_test
# Refreshing C:\Users\panai\Desktop\lab2-TSC\sim\work.instr_register
# ** Warning: (vsim-8441) ../lab01_testbench-interface/first_test.sv(25): Clocking block output lab2_if.cb.opcode is not legal in this
# or another expression.
#         Region: /instr_register_test_sv_unit
# ** Warning: (vsim-8441) ../lab01_testbench-interface/first_test.sv(26): Clocking block output lab2_if.cb.operand_a is not legal in this
# or another expression.
#         Region: /instr_register_test_sv_unit
# ** Warning: (vsim-8441) ../lab01_testbench-interface/first_test.sv(27): Clocking block output lab2_if.cb.operand_b is not legal in this
# or another expression.
#         Region: /instr_register_test_sv_unit
# ** Warning: (vsim-8441) ../lab01_testbench-interface/first_test.sv(24): Clocking block output lab2_if.cb.write_pointer is not legal in this
# or another expression.
#         Region: /instr_register_test_sv_unit
# ** Warning: (vsim-8441) ../lab01_testbench-interface/first_test.sv(31): Clocking block output lab2_if.cb.read_pointer is not legal in this
# or another expression.
#         Region: /instr_register_test_sv_unit
# 
# 
# ***********************************************************
# ***  THIS IS NOT A SELF-CHECKING TESTBENCH (YET).  YOU  ***
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
#  First display
# 
# Reseting the instruction register...
# 
# Writing values to register stack...
# Writing to register location 0: 
#   lab2_if.cb.opcode = 6 (DIV)
#   lab2_if.cb.operand_a = 1
#   lab2_if.cb.operand_b = 14
# 
# Writing to register location 1: 
#   lab2_if.cb.opcode = 3 (ADD)
#   lab2_if.cb.operand_a = 0
#   lab2_if.cb.operand_b = 10
# 
# Writing to register location 2: 
#   lab2_if.cb.opcode = 6 (DIV)
#   lab2_if.cb.operand_a = 4
#   lab2_if.cb.operand_b = 2
# 
# Writing to register location 3: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 11
#   lab2_if.cb.operand_b = 1
# 
# Writing to register location 4: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 9
# 
# Writing to register location 5: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 0
#   lab2_if.cb.operand_b = 7
# 
# Writing to register location 6: 
#   lab2_if.cb.opcode = 4 (SUB)
#   lab2_if.cb.operand_a = 0
#   lab2_if.cb.operand_b = 3
# 
# Writing to register location 7: 
#   lab2_if.cb.opcode = 5 (MULT)
#   lab2_if.cb.operand_a = 7
#   lab2_if.cb.operand_b = 7
# 
# Writing to register location 8: 
#   lab2_if.cb.opcode = 5 (MULT)
#   lab2_if.cb.operand_a = 12
#   lab2_if.cb.operand_b = 11
# 
# Writing to register location 9: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 14
#   lab2_if.cb.operand_b = 10
# 
# 
# Reading back the same register locations written...
# Read from register location 4: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 9
# 
#   result    = 10
# 
# Read from register location 4: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 9
# 
#   result    = 10
# 
# Read from register location 4: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 9
# 
#   result    = 10
# 
# Read from register location 4: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 9
# 
#   result    = 10
# 
# Read from register location 4: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 9
# 
#   result    = 10
# 
# Read from register location 4: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 9
# 
#   result    = 10
# 
# Read from register location 4: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 9
# 
#   result    = 10
# 
# Read from register location 4: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 9
# 
#   result    = 10
# 
# Read from register location 4: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 9
# 
#   result    = 10
# 
# Read from register location 4: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 9
# 
#   result    = 10
# 
# 
# ***********************************************************
# ***  THIS IS NOT A SELF-CHECKING TESTBENCH (YET).  YOU  ***
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# ** Note: $finish    : ../lab01_testbench-interface/first_test.sv(90)
#    Time: 220 ns  Iteration: 2  Instance: /top/test
# 1
# Break in Task run at ../lab01_testbench-interface/first_test.sv line 90
# Simulation Breakpoint: 1
# Break in Task run at ../lab01_testbench-interface/first_test.sv line 90
# MACRO ./run.do PAUSED at line 45
